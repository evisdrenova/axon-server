{
  "openapi": "3.1.0",
  "info": {
    "title": "Petstore API",
    "version": "1.0.0",
    "description": "A simple pet store API"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/pets": {
      "get": {
        "operationId": "listPets",
        "summary": "List all pets",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter pets by status",
            "schema": {
              "type": "string",
              "enum": ["available", "pending", "sold"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of pets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Pet" }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createPet",
        "summary": "Add a new pet to the store",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "species", "age"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the pet"
                  },
                  "species": {
                    "type": "string",
                    "description": "The species of the pet"
                  },
                  "age": {
                    "type": "integer",
                    "description": "The age of the pet in years"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Pet" }
              }
            }
          },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/pets/{id}": {
      "get": {
        "operationId": "getPetById",
        "summary": "Find pet by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of pet to return",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Pet" }
              }
            }
          },
          "404": { "description": "Pet not found" }
        }
      },
      "put": {
        "operationId": "updatePetStatus",
        "summary": "Update pet status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of pet to update",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["available", "pending", "sold"],
                    "description": "Status of the pet"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pet status updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Pet" }
              }
            }
          },
          "400": { "description": "Invalid status value" },
          "404": { "description": "Pet not found" }
        }
      },
      "delete": {
        "operationId": "deletePet",
        "summary": "Delete a pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of pet to delete",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "description": "Pet deleted successfully" },
          "404": { "description": "Pet not found" }
        }
      }
    },
    "/pets/{id}/photos": {
      "post": {
        "operationId": "uploadPetPhoto",
        "summary": "Upload a photo for a pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of pet to upload photo for",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["photo"],
                "properties": {
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "The photo to upload (JPEG, PNG, or GIF)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Photo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "photoUrl": { "type": "string", "format": "uri" }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid input or no file uploaded" },
          "404": { "description": "Pet not found" }
        }
      }
    },
    "/pets/{id}/documents": {
      "post": {
        "operationId": "uploadPetDocuments",
        "summary": "Upload multiple documents for a pet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of pet to upload documents for",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["documents"],
                "properties": {
                  "documents": {
                    "type": "array",
                    "items": { "type": "string", "format": "binary" },
                    "description": "The documents to upload (max 5 files)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Documents uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "originalName": { "type": "string" },
                          "url": { "type": "string", "format": "uri" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid input or no files uploaded" },
          "404": { "description": "Pet not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the pet"
          },
          "name": { "type": "string", "description": "The name of the pet" },
          "species": {
            "type": "string",
            "description": "The species of the pet"
          },
          "age": {
            "type": "integer",
            "description": "The age of the pet in years"
          },
          "status": {
            "type": "string",
            "description": "Pet availability status",
            "enum": ["available", "pending", "sold"]
          },
          "photos": {
            "type": "array",
            "items": { "type": "string", "format": "uri" },
            "description": "URLs of pet photos"
          }
        }
      }
    }
  }
}
